{"version":3,"sources":["Context.js","Components/Contacts/Contact.js","Components/Contacts/Contacts.js","Components/Layout/Header.js","Components/Pages/About.js","Components/Pages/NotFound.js","Components/Layout/TextInputGroup.js","Components/Contacts/AddContact.js","Components/Contacts/EditContact.js","Components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","fontSize","bind","Link","to","marginRight","Contacts","Fragment","Contacts_Contact","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropTypes","string","isRequired","func","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","Layout_TextInputGroup","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","Context_Provider","HashRouter","Layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bca3bb1a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })\n                  }\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-trash-alt\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"red\",\n                    fontSize: \"18px\"\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                      fontSize: \"18px\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    Email:\n                    {email}\n                  </li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../Context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-4\">\n                <span className=\"text-danger\">Contact </span>List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple Contact Management Application</p>\n      <p className=\"text-secondary\">inspired by KT</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4 mt-5 mb-2\">\n        <span className=\"text-danger\">404 </span>Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control from-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.PropTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for Errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"A Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"An Email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"A Phone Number is required\"\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: res.data\n    });\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"cardbody\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Your Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone #\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../Layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //Check for Errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"A Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"An Email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"A Phone Number is required\"\n        }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"cardbody\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Your Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone #\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./Components/Contacts/Contacts\";\nimport Header from \"./Components/Layout/Header\";\nimport About from \"./Components/Pages/About\";\nimport NotFound from \"./Components/Pages/NotFound\";\nimport AddContact from \"./Components/Contacts/AddContact\";\nimport EditContact from \"./Components/Contacts/EditContact\";\nimport Test from \"./Components/Test/Test\";\nimport { Provider } from \"./Context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/Test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}